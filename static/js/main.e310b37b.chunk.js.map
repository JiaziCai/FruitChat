{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","components/util/MyButton.js","components/layout/Notifications.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Navbar.js","components/util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","components/util/ProfileSkeleton.js","components/profile/Profile.js","components/util/LoadingSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","serviceWorker.js","index.js","images/no-img.png","images/sociallogo.png"],"names":["initialState","authenticated","credentials","loading","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","actions","index","findIndex","indexDelete","splice","comments","UI","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","getUserData","dispatch","axios","get","then","res","catch","err","console","log","logoutUser","localStorage","removeItem","defaults","headers","common","setAuthorizationHeader","token","FBIdToken","setItem","children","tip","onClick","btnClassName","tipClassName","Tooltip","title","className","IconButton","Notifications","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsIds","props","map","notificationId","markNotificationsRead","notificationsIcon","this","dayjs","extend","relativeTime","length","Badge","badgeContent","color","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","variant","to","recipient","sender","placement","aria-owns","undefined","aria-haspopup","Menu","open","Boolean","onClose","onEntered","Component","connect","notificationIds","post","clearErrors","PostScream","body","handleChange","name","value","handleSubmit","preventDefault","postScream","nextProps","classes","MyButton","Dialog","fullWidth","maxWidth","closeButton","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","submitButton","disabled","CircularProgress","size","progressSpinner","newScream","response","withStyles","position","left","top","Navbar","AppBar","Toolbar","rest","render","DeleteScream","deleteScream","deleteButton","DialogActions","delete","LikeButton","likedScream","find","likeScream","unlikeScream","mapActionsToProps","Comments","Grid","container","comment","imageUrl","item","sm","src","alt","commentImage","commentData","format","invisibleSeparator","visibleSeparator","theme","height","objectFit","borderRadius","marginLeft","border","margin","width","borderBottom","marginBottom","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","likeCount","commentCount","dialogMarkup","spinnerDiv","spacing","profileImage","invisibleSeperator","visibleSeperator","expandButton","padding","marginTop","Scream","Card","card","CardMedia","image","CardContent","content","display","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","float","paper","profile","verticalAlign","backgroundColor","fullLine","Paper","NoImg","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","id","hidden","href","rel","align","buttons","cardContent","flexDirection","cover","date","halfLine","Array","from","home","getScreams","recentScreamsMarkup","xs","login","userData","email","password","loginUser","form","SocialIcon","pageTitle","noValidate","customError","general","progress","push","signup","newUserData","confirmPassword","signupUser","screamIdParam","match","params","screamsMarkup","createMuiTheme","palette","primary","light","main","dark","secondary","fontSize","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.e310b37b.chunk.js","sourcesContent":["import {SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI,LOADING_USER, LIKE_SCREAM,SET_AUTHENTICATED, SET_UNAUTHENTICATED, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ} from '../types';\n\nconst initialState = {\n    authenticated: false,\n    credentials: {},\n    loading: false,\n    likes: [],\n    notifications: []\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading: false,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            }\n        case LIKE_SCREAM:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        screamId: action.payload.screamId\n                    }\n                ]\n            }\n        case UNLIKE_SCREAM:\n            return {\n                ...state,\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n            }\n        case MARK_NOTIFICATIONS_READ:\n            state.notifications.forEach((not) => (not.read = true));\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}","import {SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT} from '../types';\n\nconst initialState = {\n    screams: [],\n    scream: {},\n    loading: false\n};\n\nexport default function(state = initialState, actions){\n    switch(actions.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            }\n        case SET_SCREAMS:\n            return{\n                ...state,\n                screams: actions.payload,\n                loading: false\n            }\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            let index = state.screams.findIndex((scream) => scream.screamId === actions.payload.screamId);\n            state.screams[index] = actions.payload;\n            if(state.scream.screamId === actions.payload.screamId){\n                state.scream = actions.payload;\n            }\n            return {\n                ...state\n            }\n        case DELETE_SCREAM:\n            let indexDelete = state.screams.findIndex((scream) => scream.screamId === actions.payload);\n            state.screams.splice(indexDelete, 1);\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            return {\n                ...state,\n                screams: [\n                    actions.payload,\n                    ...state.screams\n                ]\n            }\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: actions.payload\n            }\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: {\n                    ...state.scream,\n                    comments: [actions.payload, ...state.scream.comments]\n                }\n            }\n        default:\n            return state;\n    }\n}","import {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from '../types';\n\nconst initialState = {\n    loading: false,\n    errors: null\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: null\n            }\n        case LOADING_UI: \n            return  {\n                ...state,\n                loading: true\n            }\n        case STOP_LOADING_UI:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n\nexport default store;\n","//User Reducer Types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\n\n//UI Reducer Types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n//Data \nexport const SET_SCREAMS = 'SET_SCREAMS';\nexport const SET_SCREAM = 'SET_SCREAM';\nexport const LIKE_SCREAM = 'LIKE_SCEEAM';\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\nexport const POST_SCREAM = 'POST_SCREAM';\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import {SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, LOADING_USER, SET_UNAUTHENTICATED, MARK_NOTIFICATIONS_READ} from '../types';\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post('/login', userData)\n            .then((res) => {\n                setAuthorizationHeader(res.data.token)\n                dispatch(getUserData());\n                dispatch({ type: CLEAR_ERRORS});\n                history.push('/');\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                })\n            })\n}\n\nexport const getUserData = () => (dispatch) => {\n    dispatch({ type: LOADING_USER});\n    axios.get('/user')\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n}\n\nexport const uploadImage = (formData) => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.post('/user/image', formData)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n}\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({ type: SET_UNAUTHENTICATED});\n}\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post('/signup', newUserData)\n            .then((res) => {\n                setAuthorizationHeader(res.data.token);\n                dispatch(getUserData());\n                dispatch({type: CLEAR_ERRORS});\n                history.push('/');\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                })\n            })\n}\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.post('/user', userDetails)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err))\n}\n\nexport const markNotificationsRead = (notificationIds) => dispatch => {\n    axios.post('/notifications', notificationIds)\n        .then(res => {\n            dispatch({\n                type: MARK_NOTIFICATIONS_READ,\n            })\n        })\n        .catch(err => console.log(err));\n}\n\nconst setAuthorizationHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}\n\n","import React from 'react'\nimport { Tooltip, IconButton } from '@material-ui/core';\n\nexport default ({children, tip, onClick, btnClassName, tipClassName}) => (\n    <Tooltip title={tip} className={tipClassName}>\n        <IconButton onClick={onClick} className={btnClassName}>\n            {children}\n        </IconButton>\n    </Tooltip>\n)\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\n//MUI\nimport {Typography, Menu, MenuItem, IconButton, Tooltip, Badge} from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {markNotificationsRead} from '../../redux/actions/userActions';\n\nclass Notifications extends Component{\n    state = {\n        anchorEl: null\n    }\n\n    handleOpen = (event) => {\n        this.setState({anchorEl: event.target});\n    }\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    }\n    onMenuOpened = () => {\n\n            let unreadNotificationsIds = this.props.notifications\n            .filter(not => !not.read)\n            .map(not => not.notificationId);\n        this.props.markNotificationsRead(unreadNotificationsIds);\n    }\n    render(){\n        const notifications = this.props.notifications;\n        const anchorEl = this.state.anchorEl;\n        dayjs.extend(relativeTime);\n\n        let notificationsIcon;\n        if(notifications && notifications.length > 0){\n            console.log(\"notifications\");\n            console.log(notifications.filter((not) => not.read === false).length);\n            notifications.filter(not => not.read === false).length > 0 \n            ? (notificationsIcon = (\n                <Badge \n                badgeContent={notifications.filter((not) => not.read === false).length}\n                    color=\"error\">\n                        <NotificationsIcon />\n                    </Badge>\n            )) : (\n                notificationsIcon = <NotificationsIcon />\n            )\n        } else {\n            notificationsIcon = <NotificationsIcon />\n        }\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\n            notifications.map(not => {\n                const verb = not.type === 'like' ? 'liked' : 'commented on';\n                const time = dayjs(not.createdAt).fromNow();\n                const iconColor = not.read ? \"primary\" : \"secondary\";\n                const icon = not.type === 'like' ? (\n                    <FavoriteIcon color={iconColor} style={{marginRight: 10}} />\n                ) : (\n                    <ChatIcon color={iconColor} style={{marginRight: 10}} />\n                )\n                return (\n                    <MenuItem key={not.createdAt} onClick={this.handleClose}>\n                        {icon}\n                        <Typography component={Link} color=\"primary\" variant=\"body1\" to={`/users/${not.recipient}/scream/${not.screamId}`}\n                        >\n                            {not.sender} {verb} your scream {time} \n                        </Typography>\n                    </MenuItem>\n                )\n            })\n        ) : (\n            <MenuItem onClick={this.handleClose}>\n                You have no notifications yet\n            </MenuItem>\n        )\n        return (\n            <>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleOpen}>\n                        {notificationsIcon}\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n                onEntered={this.onMenuOpened}\n                >\n                    {notificationsMarkup}\n                </Menu>\n            </>\n        )\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired,\n    notifications: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n})\n\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications);\n","import {SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM, STOP_LOADING_UI, SUBMIT_COMMENT} from '../types';\nimport axios from 'axios';\n\n\n//Get all screams \nexport const getScreams = () => dispatch => {\n    dispatch({type: LOADING_DATA});\n    axios.get('/screams')\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: []\n            })\n        })\n}\n\n//Post a scream\nexport const postScream = (newScream) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post('/scream', newScream)\n        .then(res => {\n            dispatch({\n                type: POST_SCREAM,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n//Like a scream\nexport const likeScream = (screamId) => dispatch => {\n    axios.get(`/scream/${screamId}/like`)\n        .then(res => {\n            dispatch({\n                type: LIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n}\n\n//Unlike a scream\n\nexport const unlikeScream = (screamId) => dispatch => {\n    axios.get(`/scream/${screamId}/unlike`)\n        .then(res => {\n            dispatch({\n                type: UNLIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n}\n\nexport const deleteScream = (screamId) => (dispatch) => {\n    axios.delete(`/scream/${screamId}`)\n        .then(() => {\n            dispatch({type: DELETE_SCREAM, payload: screamId})\n        })\n        .catch(err => console.log(err));\n}\n\nexport const clearErrors = () => dispatch => {\n    dispatch({type: CLEAR_ERRORS});\n}\n\nexport const getScream = (screamId) => dispatch => {\n    dispatch({type: LOADING_UI});\n    axios.get(`/scream/${screamId}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAM,\n                payload: res.data\n            });\n            dispatch({ type: STOP_LOADING_UI});\n        })\n        .catch(err => console.log(err));\n}\n\n//Submit comment\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n    axios.post(`/scream/${screamId}/comment`, commentData)\n        .then(res => {\n            dispatch({\n                type: SUBMIT_COMMENT,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const getUserData = (userHandle) => dispatch => {\n    dispatch({type: LOADING_DATA});\n    axios.get(`/user/${userHandle}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data.screams\n            });\n        })\n        .catch(() => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: null\n            })\n        })\n}","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport {connect} from 'react-redux';\nimport { postScream, clearErrors} from '../../redux/actions/dataActions';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton, Dialog, DialogContent, TextField, DialogTitle, Button } from '@material-ui/core';\nimport MyButton from '../util/MyButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n    submitButton: {\n        position: 'relative'\n    },\n    progressSpinner: {\n        position: 'absolute',\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '10%'\n    }\n}\nclass PostScream extends Component {\n    state = { \n        open: false,\n        body: '',\n        errors: {}\n     }\n     componentWillReceiveProps(nextProps){\n         console.log(nextProps);\n         if(nextProps.UI.errors){\n             this.setState({\n                 errors:nextProps.UI.errors\n             })\n             console.log(\"error!!!!! is \" + nextProps.UI.errors);\n         };\n         if (!nextProps.UI.errors && !nextProps.UI.loading){\n             this.setState({body:'', open: false, errors: {}});\n             this.setState({open: false, errors: {}})\n         }\n     }\n     handleOpen = () => {\n         this.setState({open: true})\n     }\n     handleClose = () => {\n         this.props.clearErrors();\n        this.setState({open: false, errors: {}})\n    }\n    handleChange = (event) => {\n        this.setState({ [event.target.name] : event.target.value})\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.postScream({body: this.state.body});\n    }\n    render() { \n        const {errors} = this.state;\n        const { classes, UI: {loading}} = this.props;\n        return (\n            <>\n                <MyButton onClick={this.handleOpen} tip=\"Post a Scream!\">\n                    <AddIcon color=\"secondary\" />\n                    </MyButton>\n                    <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\n                        <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                            <CloseIcon />\n                        </MyButton>\n                        <DialogTitle>Post a new post</DialogTitle>\n                        <DialogContent>\n                            <form onSubmit={this.handleSubmit}>\n                                <TextField name=\"body\" type=\"text\" label=\"Post\" multiline rows=\"3\" placeholder=\"Post your messages\" error={errors.body ? true : false}\n                                helperText={errors.body}\n                                className={classes.textField}\n                                onChange = {this.handleChange}\n                                fullWidth />\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\"\n                                    className={classes.submitButton} disabled={loading}>\n                                    Submit\n                                        {loading && (<CircularProgress size={30} className={classes.progressSpinner} />)}\n                                    </Button>\n                            </form>\n                        </DialogContent>\n                    </Dialog>\n            </>\n        )\n    }\n}\n\nPostScream.propTypes = {\n    postScream: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n}\n \nconst mapStateToProps = (state) => ({\n    UI: state.UI,\n\n})\n\nexport default connect(mapStateToProps, {postScream, clearErrors})(withStyles(styles)(PostScream));","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport Notifications from './Notifications';\n//MUI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PostScream from '../scream/PostScream';\n\n class Navbar extends Component {\n    render() {\n        const { authenticated} = this.props;\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? (\n                        <>\n                            <PostScream />\n                            <Link to=\"/\">\n                            <MyButton tip=\"Home\">\n                                <HomeIcon  />\n                            </MyButton>\n                            </Link>\n                                <Notifications />\n                        </>\n                    ) : (\n                        <>\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n})\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest}) => (\n    <Route\n    {...rest}\n    render={(props) => authenticated === true ? <Redirect to='/' /> : <Component {...props} />\n    }\n    />\n)\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated\n})\n\nAuthRoute.propTypes = {\n    user: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {connect} from 'react-redux';\nimport {deleteScream} from '../../redux/actions/dataActions';\n\nconst styles = {\n\n}\n\nexport class DeleteScream extends Component {\n    state = {\n        open: false\n    };\n    handleOpen = () => {\n        this.setState({open: true});\n    }\n    handleClose = () => {\n        this.setState({open: false});\n    }\n    deleteScream = () => {\n        this.props.deleteScream(this.props.screamId)\n        this.setState({open: false});\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <>\n                <MyButton tip=\"Delete Scream\"\n                onClick={this.handleOpen}\n                btnClassName={classes.deleteButton}\n                >\n                <DeleteOutline color=\"secondary\" />\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <DialogTitle>\n                        Are you sure you want to delete this post?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.deleteScream} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        )\n    }\n}\n\nDeleteScream.propTypes = {\n    deleteScream: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired\n}\n\nexport default connect(null, {deleteScream})(withStyles(styles)(DeleteScream));\n","import React, { Component } from 'react';\nimport MyButton from '../util/MyButton';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n//Redux\nimport {connect} from 'react-redux';\nimport {likeScream, unlikeScream} from '../../redux/actions/dataActions';\nexport class LikeButton extends Component {\n\n    likedScream = () => {\n        if(this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.screamId))\n            return true;\n            else return false;\n    }\n    likeScream = () => {\n        this.props.likeScream(this.props.screamId);\n    }\n\n    unlikeScream = () => {\n        this.props.unlikeScream(this.props.screamId);\n    }\n\n    render() {\n        const {authenticated} = this.props.user;\n        const likeButton = !authenticated ? (\n            <Link to=\"/login\">\n            <MyButton tip=\"Like\">\n                    <FavoriteBorder color=\"primary\" />\n            </MyButton>\n            </Link>\n        ) : (\n            this.likedScream() ? (\n                <MyButton tip=\"Undo like\" onClick={this.unlikeScream}>\n                    <FavoriteIcon color=\"primary\" />\n                </MyButton>\n            ) : (\n                <MyButton tip=\"like\" onClick={this.likeScream}>\n                <FavoriteBorder color=\"primary\" />\n            </MyButton> \n            )\n        )\n        return likeButton;\n    }\n}\n\nLikeButton.propTypes = {\n    user: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    likeScream: PropTypes.func.isRequired,\n    unlikeScream: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nconst mapActionsToProps = {\n    likeScream, \n    unlikeScream\n}\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n//MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    // ...theme\n    commentImage: {\n        maxWidth: 100,\n        height: 100,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    commentData: {\n        marginLeft: 20,\n    },\n    invisibleSeparator: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n})\n\nclass Comments extends Component {\n    state = {  }\n    render() { \n        const {comments, classes} = this.props;\n        return ( \n            <Grid container>\n                {comments.map((comment, index) => {\n                    const { body, createdAt, imageUrl, userHandle} = comment;\n                    return (\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    <Grid item sm={2}>\n                                        <img src={imageUrl} alt=\"comment\" className={classes.commentImage}/>\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        <div className={classes.commentData}>\n                                            <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\n                                                {userHandle}\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <hr className={classes.invisibleSeparator} />\n                                            <Typography variant=\"body1\">{body}</Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            { index !== comments.length -1 && (<hr className={classes.visibleSeparator} />)}\n                        </Fragment>\n                    )\n                })}\n            </Grid>\n         );\n    }\n}\n \nComments.propTypes = {\n    comments: PropTypes.array.isRequired\n}\n\nexport default withStyles(styles)(Comments);","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n//MUI\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport {connect} from 'react-redux';\nimport {submitComment} from '../../redux/actions/dataActions';\nimport { CLEAR_ERRORS } from '../../redux/types';\n\nconst styles = theme => ({\n    // ...theme\n})\nclass CommentForm extends Component {\n    state = { \n        body: '',\n        errors: {}\n     }\n\n     componentWillReceiveProps(nextProps){\n         if(nextProps.UI.errors){\n             this.setState({errors: nextProps.UI.errors});\n         }\n         if (!nextProps.UI.errors && !nextProps.UI.loading){\n             this.setState({body:''});\n         }\n     }\n\n     handleChange = (event) => {\n         this.setState({[event.target.name] : event.target.value});\n     }\n     handleSubmit = (event) => {\n         event.preventDefault();\n         this.props.submitComment(this.props.screamId, {body: this.state.body});\n     }\n    render() { \n        const {classes, authenticated} = this.props;\n        const errors = this.state.errors;\n        const commentFormMarkup = authenticated ? (\n            <Grid item sm={12} style={{textAlign:'center'}}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name=\"body\"\n                        type=\"text\"\n                        label=\"Comment\"\n                        error={errors.comment ? true : false}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.textField}\n                    />\n                    <Button type=\"Submit\" variant=\"contained\" color=\"primary\" className={classes.button}>Submit</Button>\n                </form>\n                <hr className={classes.visibleSeparator} />\n            </Grid>\n        ) : null\n        return commentFormMarkup;\n    }\n}\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired\n}\nconst mapStateToProps = state => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n})\n \nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport MyButton from '../util/MyButton';\nimport {Link}from 'react-router-dom';\nimport LikeButton from './LikeButton';\nimport { IconButton, Dialog, DialogContent, TextField, DialogTitle, Button, Grid, Typography } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\n//Redux\nimport {connect} from 'react-redux';\nimport {getScream, clearErrors} from '../../redux/actions/dataActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles= {\n    profileImage: {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%'\n    },\n    invisibleSeperator: {\n        border: 'none',\n        margin: 4\n    },\n    DialogContent: {\n        padding: 20\n    },\n    closeButton:{\n        position: 'absolute',\n        left: '90%',\n    },\n    expandButton:{\n        position: 'absolute',\n        left: '90%'\n    },\n    spinnerDiv: {\n        textAlign: 'center',\n        marginTop: '50',\n        marginBottom: '50'\n    }\n}\n\nclass ScreamDialog extends Component {\n    state = { \n        open: false,\n        oldPath: '',\n        newPath: ''\n     }\n\n     componentDidMount(){\n         if(this.props.openDialog){\n             this.handleOpen();\n         }\n     }\n\n     handleOpen = () => {\n        let oldPath = window.location.pathname;\n\n        const { userHandle, screamId} = this.props;\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n        if (oldPath === newPath) oldPath= `/users/${userHandle}`;\n        window.history.pushState(null ,null ,newPath);\n\n         this.setState({open: true, oldPath, newPath});\n         this.props.getScream(this.props.screamId);\n     }\n     handleClose = () => {\n         window.history.pushState(null, null, this.state.oldPath);\n         this.setState({open: false});\n         this.props.clearErrors();\n     }\n\n    render() { \n        const {classes, scream: {screamId, body, createdAt, likeCount, commentCount, imageUrl, userHandle, comments}, UI: {loading}}\n            = this.props;\n            const dialogMarkup = loading ? (\n                <div className={classes.spinnerDiv}>\n                <CircularProgress size={200} />\n                </div>\n            ) : (\n                <Grid container spacing={16}>\n                    <Grid item sm={5}>\n                        <img src={imageUrl} alt=\"Profile\" className={classes.profileImage}/>\n                    </Grid>\n                    <Grid item sm={7}>\n                    <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${userHandle}`}>\n                        @{userHandle}\n                    </Typography>\n                    <hr className={classes.invisibleSeperator}/>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                    </Typography>\n                    <hr className={classes.invisibleSeperator} />\n                    <Typography variant=\"body1\">\n                        {body}\n                    </Typography>\n                    <LikeButton screamId={screamId} />\n                    <span>{likeCount} likes</span>\n                    <MyButton tip=\"comments\">\n                        <ChatIcon color=\"primary\" />\n                    </MyButton>\n                    <span>{commentCount} comments</span>\n                    </Grid>\n                    <hr className={classes.visibleSeperator} />\n                    <CommentForm screamId={screamId} />\n                    <Comments comments={comments} />\n                </Grid>\n            )\n        return ( \n            <>\n                <MyButton onClick={this.handleOpen} tip=\"Expand post\" tipClassName={classes.expandButton}>\n                    <UnfoldMore color=\"primary\" />\n                </MyButton>\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\n                        <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                            <CloseIcon />\n                        </MyButton>\n                        <DialogContent className={classes.DialogContent}>\n                            {dialogMarkup}\n                        </DialogContent>\n                    </Dialog>\n            </>\n         );\n    }\n}\n \nScreamDialog.propTypes = {\n    getScream: PropTypes.func.isRequired,\n    screamId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    scream: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    clearErrors: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    scream: state.data.scream,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    getScream,\n    clearErrors\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './ScreamDialog';\nimport LikeButton from './LikeButton';\n//Mui\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nimport {connect} from 'react-redux';\nimport MyButton from '../util/MyButton';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst styles = {\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n        position: 'relative',\n    },\n    image: {\n        minWidth: 200,\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover',\n        textAlign: 'left',\n    }\n}\n\nexport class Scream extends Component {\n\n    likedScream = () => {\n        if(this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId))\n            return true;\n            else return false;\n    }\n    likeScream = () => {\n        this.props.likeScream(this.props.scream.screamId);\n    }\n\n    unlikeScream = () => {\n        this.props.unlikeScream(this.props.scream.screamId);\n    }\n    render() {\n        dayjs.extend(relativeTime);\n        const { classes, scream: {body, imageUrl, createdAt, userHandle, screamId, likeCount, commentCount}, user:{authenticated, credentials: handle} } = this.props;\n        const deleteButton = (authenticated && userHandle === this.props.user.credentials.handle) ? (\n            <DeleteScream screamId={screamId} />\n        ) : null\n        return (\n            <Card className={classes.card}>\n                <CardMedia\n                image={imageUrl}\n                title=\"Profile image\"\n                className={classes.image}\n                />\n                <CardContent className={classes.content}>\n                    <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`}>{userHandle}</Typography>\n                    {deleteButton}\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\n                    <Typography variant=\"body1\">{body}</Typography>\n                    <LikeButton screamId={screamId} />\n                    <span>{likeCount} Likes</span>\n                    <MyButton tip=\"comments\">\n                        <ChatIcon color=\"primary\" />\n                    </MyButton>\n                    <span>{commentCount} comments</span>\n                    <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog} />\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nScream.propTypes = {\n    user: PropTypes.object.isRequired,\n    scream: PropTypes.object.isRequired,\n    classes: PropTypes.object,\n    openDialog: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport {connect} from 'react-redux';\nimport { editUserDetails} from '../../redux/actions/userActions';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton, Dialog, DialogContent, TextField, DialogTitle, DialogActions, Button } from '@material-ui/core';\nimport MyButton from '../util/MyButton';\n\n\n\nconst styles = (theme) => ({\n    // ...theme\n    button: {\n        float: 'right',\n    }\n})\n\nclass EditDetails extends Component {\n    state = {\n        bio: '',\n        website: '',\n        location: '',\n        open: false\n    }\n\n    mapUserDetailsToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : ''\n        });\n    }\n\n    componentDidMount(){\n        const {credentials} = this.props;\n        this.mapUserDetailsToState(credentials);\n    }    \n\n    handleOpen = () => {\n        this.setState({open: true});\n        this.mapUserDetailsToState(this.props.credentials);\n    }\n    handleClose = () => {\n        this.setState({open: false});\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n    handleSubmit = () => {\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        };\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\" />\n                </MyButton>\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\n                    <DialogTitle>Edit your profile</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField name=\"bio\" type=\"text\" label=\"Bio\" multiline rows=\"3\" placeholder=\"A short bio about yourself\"\n                                className={classes.textField} value={this.state.bio} onChange={this.handleChange} fullWidth />\n                            <TextField name=\"website\" type=\"text\" label=\"website\" placeholder=\"Website\"\n                                className={classes.textField} value={this.state.website} onChange={this.handleChange} fullWidth />\n                            <TextField name=\"location\" type=\"text\" label=\"Location\" placeholder=\"Location\"\n                                className={classes.textField} value={this.state.location} onChange={this.handleChange} fullWidth />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n})\n\n\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/styles/withStyles';\nimport NoImg from '../../images/no-img.png';\n\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport MuiLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n\nconst styles = theme => ({\n    paper: {\n        padding: 20,\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    profile: {\n        '& .image-wrapper':{\n            textAlign: 'center',\n            position: 'relative',\n            '& butotn': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        }\n    },\n    handle: {\n        height: 20,\n        backgroundColor: '#00bcd4',\n        width: 60,\n        margin: '0px auto 7px auto',\n    },\n    fullLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.4)',\n        width: '100%',\n        marginBottom: 10,\n\n    }\n})\n\nconst ProfileSkeleton = (props) => {\n    const {classes} = props;\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\n                </div>\n                <hr />\n                <div className=\"profile-details\">\n                    <div className={classes.handle} />\n                    <hr />\n                    <div className={classes.fullLine} />\n                    <div className={classes.fullLine} />\n                    <hr />\n                    <LocationOnIcon color=\"primary\" /><span>Location</span>\n                    <hr />\n                    <LinkIcon color=\"primary\" /> https://website.com\n                    <hr />\n                    Joined date\n                </div>\n            </div>\n        </Paper>\n    )\n}\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ProfileSkeleton);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport EditDetails from './EditDetails';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\n\n//MUI\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport MuiLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n//Redux\nimport {logoutUser, uploadImage} from '../../redux/actions/userActions';\nimport MyButton from '../util/MyButton';\n\n\nconst styles = {\n    paper: {\n        padding: 20,\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    profile: {\n        '& .image-wrapper':{\n            textAlign: 'center',\n            position: 'relative',\n            '& butotn': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        }\n    }\n};\n\nclass Profile extends Component {\n\n    handleImageChange = (event) => {\n        const image = event.target.files[0];\n        //send to server\n        const formData = new FormData();\n        formData.append('image', image, image.name);\n        this.props.uploadImage(formData);\n    }\n    handleEditPicture = () => {\n        const fileInput = document.getElementById('imageInput');\n        fileInput.click();\n    }\n    handleLogout = () => {\n        this.props.logoutUser();\n    }\n    render() {\n        const { classes, user: { credentials: {handle, createdAt, imageUrl, bio, website, location}, loading, authenticated}} = this.props;\n        \n        let profileMarkup = !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} className=\"profile-image\" alt=\"profile\"/>\n                        <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange} />\n                        <MyButton tip=\"Edit profile picture\" onClick={this.handleEditPicture} btnClassName=\"button\">\n                            <EditIcon color=\"primary\" />\n                        </MyButton>\n                    </div>\n                    <hr />\n                    <div className=\"profile-details\">\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                            @{handle}\n                        </MuiLink>\n                        <hr />\n                        {bio && <Typography variant=\"body2\">{bio}</Typography> }\n                        <hr />\n                        {location && (\n                            <>\n                            <LocationOnIcon color=\"primary\" /> \n                            <span>{location}</span>\n                            <hr />\n                            </>\n                        )}\n                        {website && (\n                            <>\n                                <LinkIcon color=\"primary\" />\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}{website}\n                                </a>\n                                <hr />\n                            </>\n                        )}\n                    </div>\n                    <MyButton tip=\"Log out\" onClick={this.handleLogout} >\n                            <ExitToAppIcon color=\"primary\" />\n                        </MyButton>\n                    <EditDetails />\n                </div>\n            </Paper>\n        ):(\n            <Paper className={classes.paper}>\n                <Typography variant=\"body2\" align=\"center\">\n                    No profile found, please login again\n                </Typography>\n                <div className={classes.buttons}>\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">Login</Button>\n                    <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">Signup</Button>\n                </div>\n            </Paper>\n        )) : (<ProfileSkeleton />)\n        return profileMarkup;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nconst mapActionsToProps = { logoutUser, uploadImage};\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    uploadImage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile))\n","import React from 'react';\nimport NoImg from '../../images/no-img.png';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = theme => ({\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'col',\n        padding: 25,\n    },\n    cover: {\n        minWidth: 200,\n        objectFit: 'cover',\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        backgroundColor: '#00bcd4',\n        marginBottom: 7\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: '80%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.4)'\n    },\n    halfLine: {\n        height: 15,\n        width: '40%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.4)'\n    },\n})\n\nconst LoadingSkeleton = (props) => {\n    const {classes} = props;\n    const content = Array.from({length: 5}).map((item, index) => (\n        <Card className={classes.card} key={index}>\n            <CardMedia className={classes.cover} image={NoImg} />\n            <CardContent className={classes.cardContent}>\n                <div className={classes.handle} />\n                <div className={classes.date} />\n                <div className={classes.fullLine} />\n                <div className={classes.fullLine} />\n                <div className={classes.halfLine} />\n            </CardContent>\n        </Card>\n    ))\n    return <>{content}</>\n}\n\nLoadingSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n\n\nexport default withStyles(styles)(LoadingSkeleton);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Scream from '../components/scream/Scream';\nimport Profile from '../components/profile/Profile';\nimport PropTypes from 'prop-types';\nimport LoadingSkeleton from '../../src/components/util/LoadingSkeleton';\n\nimport {connect} from 'react-redux';\nimport {getScreams} from '../redux/actions/dataActions';\n\nexport class home extends Component {\n    componentDidMount(){\n        this.props.getScreams();\n    }\n    render() {\n        const {screams, loading, likeCount} = this.props.data;\n        console.log(\"all the screams\");\n        console.log(screams);\n        console.log(\"all the likes\");\n        console.log(this.props.data);\n        let recentScreamsMarkup = !loading ? (\n            screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n        ) : <LoadingSkeleton />\n        return (\n            <Grid container>\n                <Grid item sm={8} xs={12}>\n                    {recentScreamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile></Profile>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nhome.propTypes = {\n    getScreams: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getScreams})(home);\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport SocialIcon from '../images/sociallogo.png';\nimport {Link} from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from '@material-ui/core';\n//REdux \nimport { connect } from 'react-redux';\nimport {loginUser} from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    // ...theme\n})\n\n\nexport class login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({errors: nextProps.UI.errors});\n        }\n    }\n\n    handleSubmit = (event) => {\n        console.log(\"triggered\");\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n        console.log(this.props);\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm />\n                <Grid item sm >\n                <img src={SocialIcon} alt=\"logo\" />\n                <Typography variant=\"h2\" className={classes.pageTitle}>Login</Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField id=\"email\" name=\"email\" type=\"email\" label=\"email\" className={classes.textField}\n                        value={this.state.email} onChange={this.handleChange} error={errors.email ? true : false} helperText={errors.email} fullWidth />\n                    <TextField id=\"password\" name=\"password\" type=\"password\" label=\"password\" className={classes.textField}\n                        value={this.state.password} onChange={this.handleChange} error={errors.password ? true : false} helperText={errors.password}  fullWidth />\n                    {errors.error && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.error}\n                        </Typography>\n                    )}\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" className={classes.button} disabled={loading}>LOGIN\n                    {loading && (\n                        <CircularProgress size={30} className={classes.progress} />\n                    )}\n                    </Button>\n                    <br />\n                    <small>dont have an account? sign up <Link to=\"/signup\">Here</Link></small>\n                </form>\n                </Grid>\n                <Grid item sm />\n            </Grid>\n        );\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport SocialIcon from '../images/sociallogo.png';\nimport {Link} from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from '@material-ui/core';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {signupUser} from '../redux/actions/userActions';\nconst styles = (theme) => ({\n    // ...theme\n})\n\nexport class signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({errors: nextProps.UI.errors});\n        }\n    }\n\n    handleSubmit = (event) => {\n        console.log(\"triggered\");\n        event.preventDefault();\n        this.setState({\n            loading: true,\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        }\n        this.props.signupUser(newUserData, this.props.history);\n        // axios.post('/signup', newUserData)\n        //     .then((res) => {\n        //         localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        //         console.log(res.data);\n        //         this.setState({\n        //             loading: false\n        //         });\n        //         this.props.history.push('/');\n        //     })\n        //     .catch(err => {\n        //         console.log(err);\n        //         this.setState({\n        //             errors: err.response.data,\n        //             loading: false,\n        //         })\n        //         console.log(this.state.errors)\n        //     })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        const {classes, UI:{loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm />\n                <Grid item sm >\n                <img src={SocialIcon} alt=\"logo\" />\n                <Typography variant=\"h2\" className={classes.pageTitle}>Sign Up</Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField id=\"email\" name=\"email\" type=\"email\" label=\"email\" className={classes.textField}\n                        value={this.state.email} onChange={this.handleChange} error={errors.email ? true : false} helperText={errors.email} fullWidth />\n                    <TextField id=\"password\" name=\"password\" type=\"password\" label=\"password\" className={classes.textField}\n                        value={this.state.password} onChange={this.handleChange} error={errors.password ? true : false} helperText={errors.password}  fullWidth />\n                    <TextField id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" label=\"Confirm Password\" className={classes.textField}\n                        value={this.state.confirmPassword} onChange={this.handleChange} error={errors.confirmPassword ? true : false} helperText={errors.confirmPassword}  fullWidth />\n                    <TextField id=\"handle\" name=\"handle\" type=\"text\" label=\"Handle\" className={classes.textField}\n                        value={this.state.handle} onChange={this.handleChange} error={errors.handle ? true : false} helperText={errors.handle}  fullWidth />\n                    {errors.error && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.error}\n                        </Typography>\n                    )}\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} disabled={loading}>Signup\n                    {loading && (\n                        <CircularProgress size={30} className={classes.progress} />\n                    )}\n                    </Button>\n                    <br />\n                    <small>Already have an account? log in <Link to=\"/login\">here</Link></small>\n                </form>\n                </Grid>\n                <Grid item sm />\n            </Grid>\n        );\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    signupUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(mapStateToProps, {signupUser})(withStyles(styles)(signup));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\n\nimport MuiLink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { classes } from 'istanbul-lib-coverage';\nimport {Link} from 'react-router-dom';\n\nconst styles = {\n    paper: {\n        padding: 20,\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    profile: {\n        '& .image-wrapper':{\n            textAlign: 'center',\n            position: 'relative',\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        }\n    }\n};\n\nconst StaticProfile = (props) => {\n    const { classes, profile: {handle, createdAt, imageUrl, bio, website, location}} = props;\n    return (\n        <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} className=\"profile-image\" alt=\"profile\"/>\n                    </div>\n                    <hr />\n                    <div className=\"profile-details\">\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                            @{handle}\n                        </MuiLink>\n                        <hr />\n                        {bio && <Typography variant=\"body2\">{bio}</Typography> }\n                        <hr />\n                        {location && (\n                            <>\n                            <LocationOnIcon color=\"primary\" /> \n                            <span>{location}</span>\n                            <hr />\n                            </>\n                        )}\n                        {website && (\n                            <>\n                                <LinkIcon color=\"primary\" />\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}{website}\n                                </a>\n                                <hr />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n    )\n}\n\nStaticProfile.propTypes = {\n    profile: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Scream from '../components/scream/Scream';\nimport Grid from '@material-ui/core/Grid';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport LoadingSkeleton from '../components/util/LoadingSkeleton';\nimport ProfileSkeleton from '../components/util/ProfileSkeleton';\nimport {connect} from 'react-redux';\nimport {getUserData} from '../redux/actions/dataActions';\n\n\nexport class user extends Component {\n    state = {\n        profile: null,\n        screamIdParam: null,\n    }\ncomponentDidMount(){\n    const handle = this.props.match.params.handle;\n    const screamId = this.props.match.params.screamId;\n\n    if(screamId) this.setState({screamIdParam: screamId});\n    this.props.getUserData(handle);\n    axios.get(`/user/${handle}`)\n        .then(res => {\n            this.setState({\n                profile: res.data.user\n            })\n        })\n        .catch(err => console.log(err));\n}\n\n    render() {\n        const {screams, loading} = this.props.data;\n        const {screamIdParam} = this.state;\n        const screamsMarkup = loading ? (\n            <LoadingSkeleton />\n        ) : screams === null ? (\n            <p>No screams from this user</p>\n        ) : !screamIdParam  ? (\n            screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n        ) : (\n            screams.map(scream => {\n                if(scream.screamId !== screamIdParam) return <Scream key={scream.screamId} scream={scream} />\n                else return <Scream key={scream.screamId} scream={scream} openDialog />\n            })\n        )\n        return (\n            <Grid container>\n                <Grid item sm={8} xs={12}>\n                    {screamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                {this.state.profile === null ? (\n                    <ProfileSkeleton />\n                ) : (\n                    <StaticProfile profile={this.state.profile} />\n                )}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nuser.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getUserData})(user);\n","import React, {Component} from 'react';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n//Redux\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport {SET_AUTHENTICATED} from './redux/types';\nimport {logoutUser, getUserData} from './redux/actions/userActions'; \n\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from '../src/components/util/AuthRoute';\n\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/user';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary:{\n      light: '#44c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n    },\n    secondary: {\n      light: 'ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00'\n    },\n  },\n  form: {\n    textAlign: 'center',\n},\nimage: {\n    margin: '10px auto 10px auto'\n},\npageTitle: {\n    margin: '10px auto 10px auto'\n},\ntextField: {\n    margin: '10px auto 10px auto'\n},\ncustomError: {\n    color: 'red',\n    fontSize: '0.8rem'\n},\nprogress: {\n    \n},\nbutton: {\n    position: 'relative',\n    margin: '20',\n}\n})\n\nconst token = localStorage.FBIdToken;\nif(token) {\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser())\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED});\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={home} />\n            <AuthRoute exact path=\"/login\" component={login}/>\n            <AuthRoute exact path=\"/signup\" component={signup}/>\n            <Route exact path=\"/users/:handle\" component={user} />\n            <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\n          </Switch>\n        </div>\n        </Router>\n      </Provider>\n      </MuiThemeProvider>\n     );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-img.5a021ab9.png\";","module.exports = __webpack_public_path__ + \"static/media/sociallogo.38c19b99.png\";"],"sourceRoot":""}